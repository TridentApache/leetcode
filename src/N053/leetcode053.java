package N053;

/**
 * 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
 *
 * 示例:
 * 输入: [-2,1,-3,4,-1,2,1,-5,4],
 * 输出: 6
 * 解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
 *
 * 进阶:
 * 如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解
 *
 * 方法一：分治法求解：
 *      分三种情况找最大和连续子数组，1）在左边的子数组中 2）在右边的子数组中 3）横跨左右数组。在左边子数组或右边子数组直接直接递归就好了，如果横跨左右数组
 *      就往两边遍历变大来找最大值
 * 方法二：贪心算法：
 *      遍历一遍数组，每次只考虑当前位置最大的情况（是继续加当前位置，还是只是考虑当前位置），再考虑当前最大情况是否是历史最大
 * */
public class leetcode053 {
}
